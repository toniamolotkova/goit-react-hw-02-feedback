{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","goodFeedback","neutralFeedback","badFeedback","className","s","btnWrap","btn","onClick","type","Statistics","good","neutral","bad","total","positivePercentage","item","isNaN","Section","title","children","section","Notification","message","App","state","handleGoodFeedback","setState","prevState","handleNeutralFeedback","handleBadFeedback","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,IAAM,+B,iBCAnED,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,mBCA7DD,EAAOC,QAAU,CAAC,MAAQ,8B,wLCiBXC,EAhBS,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,aAAcC,EAAmC,EAAnCA,gBAAiBC,EAAkB,EAAlBA,YACxD,OACE,sBAAKC,UAAWC,IAAEC,QAAlB,UACE,wBAAQF,UAAWC,IAAEE,IAAKC,QAASP,EAAcQ,KAAK,SAAtD,kBAGA,wBAAQL,UAAWC,IAAEE,IAAKC,QAASN,EAAiBO,KAAK,SAAzD,qBAGA,wBAAQL,UAAWC,IAAEE,IAAKC,QAASL,EAAaM,KAAK,SAArD,qB,gBCMSC,EAfI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,+BACE,qBAAIX,UAAWC,IAAEW,KAAjB,mBAA8BL,KAC9B,qBAAIP,UAAWC,IAAEW,KAAjB,sBAAiCJ,KACjC,qBAAIR,UAAWC,IAAEW,KAAjB,kBAA6BH,KAC7B,qBAAIT,UAAWC,IAAEW,KAAjB,oBAA+BF,EAA/B,OACA,qBAAIV,UAAWC,IAAEW,KAAjB,UACG,IADH,mBAEmBC,MAAMF,GAAsBJ,EAAOI,EAFtD,W,gBCISG,MATf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAAShB,UAAWC,IAAEgB,QAAtB,UACGF,GAAS,oBAAIf,UAAWC,IAAEc,MAAjB,SAAyBA,IAClCC,M,gBCFQE,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,oBAAInB,UAAWC,IAAEc,MAAjB,SAAyBI,KCkEnBC,E,4MA7DbC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPa,mBAAqB,WACnB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BjB,KAAMiB,EAAUjB,KAAO,O,EAG3BkB,sBAAwB,WACtB,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BhB,QAASgB,EAAUhB,QAAU,O,EAGjCkB,kBAAoB,WAClB,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1Bf,IAAKe,EAAUf,IAAM,O,EAIzBkB,mBAAqB,WACnB,OAAO,EAAKN,MAAMd,KAAO,EAAKc,MAAMZ,IAAM,EAAKY,MAAMb,S,EAGvDoB,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKT,MAAMd,KAAc,EAAKoB,uB,4CAGnD,WAGE,OACE,qCACE,cAAC,EAAD,CAASZ,MAAO,yBAAhB,SACE,cAAC,EAAD,CACElB,aAAckC,KAAKT,mBACnBxB,gBAAiBiC,KAAKN,sBACtB1B,YAAagC,KAAKL,sBAItB,cAAC,EAAD,CAASX,MAAO,aAAhB,SACiC,IAA9BgB,KAAKJ,qBACJ,cAAC,EAAD,CACEpB,KAAMwB,KAAKV,MAAMd,KACjBC,QAASuB,KAAKV,MAAMb,QACpBC,IAAKsB,KAAKV,MAAMZ,IAChBC,MAAOqB,KAAKJ,qBACZhB,mBAAoBoB,KAAKH,oCAG3B,cAAC,EAAD,CAAcT,QAAS,+B,GAtDjBa,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.37ccb1d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__1vE2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnWrap\":\"FeedbackOptions_btnWrap__3NOGu\",\"btn\":\"FeedbackOptions_btn__1rp9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__3IJtT\"};","import s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ goodFeedback, neutralFeedback, badFeedback }) => {\n  return (\n    <div className={s.btnWrap}>\n      <button className={s.btn} onClick={goodFeedback} type=\"button\">\n        Good\n      </button>\n      <button className={s.btn} onClick={neutralFeedback} type=\"button\">\n        Neutral\n      </button>\n      <button className={s.btn} onClick={badFeedback} type=\"button\">\n        Bad\n      </button>\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\n","import s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul>\n      <li className={s.item}>Good: {good}</li>\n      <li className={s.item}>Neutral: {neutral}</li>\n      <li className={s.item}>Bad: {bad}</li>\n      <li className={s.item}>Total: {total} </li>\n      <li className={s.item}>\n        {' '}\n        Good feedbacks: {isNaN(positivePercentage) ? good : positivePercentage}%\n      </li>\n    </ul>\n  );\n};\n\nexport default Statistics;\n","import s from './Section.module.css';\n\nimport React from 'react';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nexport default Section;\n","import s from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <h2 className={s.title}>{message}</h2>;\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport './App.css';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleGoodFeedback = () => {\n    this.setState(prevState => ({\n      good: prevState.good + 1,\n    }));\n  };\n  handleNeutralFeedback = () => {\n    this.setState(prevState => ({\n      neutral: prevState.neutral + 1,\n    }));\n  };\n  handleBadFeedback = () => {\n    this.setState(prevState => ({\n      bad: prevState.bad + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.bad + this.state.neutral;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    //const total = good + neutral + bad;\n\n    return (\n      <>\n        <Section title={'Please, leave feedback'}>\n          <FeedbackOptions\n            goodFeedback={this.handleGoodFeedback}\n            neutralFeedback={this.handleNeutralFeedback}\n            badFeedback={this.handleBadFeedback}\n          />\n        </Section>\n\n        <Section title={'Statistics'}>\n          {this.countTotalFeedback() !== 0 ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message={'No feedback given'} />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}